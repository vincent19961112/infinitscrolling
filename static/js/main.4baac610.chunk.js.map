{"version":3,"sources":["App.js","useBookSearch.js","index.js"],"names":["App","useState","query","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevBooks","Set","data","docs","map","b","title","length","console","log","catch","e","isCancel","useBookSearch","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","target","book","index","ref","ReactDOM","render","document","getElementById"],"mappings":"iMAGe,SAASA,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEQF,mBAAS,GAFjB,mBAErBG,EAFqB,KAETC,EAFS,OCAf,SAAuBH,EAAOE,GAAa,IAAD,EAC1BH,oBAAS,GADiB,mBACjDK,EADiD,KACxCC,EADwC,OAE9BN,oBAAS,GAFqB,mBAEjDO,EAFiD,KAE1CC,EAF0C,OAG9BR,mBAAS,IAHqB,mBAGjDS,EAHiD,KAG1CC,EAH0C,OAI1BV,oBAAS,GAJiB,mBAIjDW,EAJiD,KAIxCC,EAJwC,KAgCxD,OA1BAC,qBAAU,WACTH,EAAS,MACP,CAACT,IAEJY,qBAAU,WAGT,IAAIC,EAgBJ,OAlBAR,GAAW,GACXE,GAAS,GAETO,IAAM,CACNC,OAAQ,MACRC,IAAI,sCAAsCC,OAAQ,CAACC,EAAElB,EAAOmB,KAAMjB,GAClEkB,YAAa,IAAIN,IAAMO,aAAY,SAAAC,GAAC,OAAIT,EAASS,OAC/CC,MAAK,SAAAC,GACPf,GAAS,SAAAgB,GACR,mBAAU,IAAIC,IAAJ,sBAAYD,GAAZ,YAAyBD,EAAIG,KAAKC,KAAKC,KAAI,SAAAC,GAAC,OAAGA,EAAEC,gBAE5DpB,EAAWa,EAAIG,KAAKC,KAAKI,OAAS,GAClC3B,GAAW,GACV4B,QAAQC,IAAIV,EAAIG,SACdQ,OAAM,SAAAC,GACLtB,IAAMuB,SAASD,IAClB7B,GAAS,MAEH,kBAAKM,OACV,CAACb,EAAME,IAEH,CAAEE,UAASE,QAAOE,QAAOE,WDvB3B4B,CAActC,EAAOE,GAJvBM,EAL0B,EAK1BA,MACAE,EAN0B,EAM1BA,QACAN,EAP0B,EAO1BA,QACAE,EAR0B,EAQ1BA,MAGIiC,EAAWC,mBACXC,EAAqBC,uBAAY,SAAAC,GAClCvC,IACH6B,QAAQC,IAAIK,EAASK,SAClBL,EAASK,SAASL,EAASK,QAAQC,aACtCN,EAASK,QAAU,IAAIE,sBAAqB,SAAAC,GACvCA,EAAQ,GAAGC,gBAAkBtC,GAC9BP,GAAc,SAAA8C,GAAc,OAAIA,EAAiB,QAGlDN,GAAMJ,EAASK,QAAQM,QAAQP,GAClCV,QAAQC,IAAIS,OASd,OACE,qCACC,uBAAOQ,KAAK,OAAOC,MAAOpD,EAAOqD,SARpC,SAAsBjB,GACpBnC,EAASmC,EAAEkB,OAAOF,OAClBjD,EAAc,MAObK,EAAMqB,KAAI,SAAC0B,EAAMC,GAChB,OAAGhD,EAAMwB,SAAWwB,EAAM,EAChB,qBAAKC,IAAKhB,EAAV,SAA0Cc,GAAPA,GAEnC,8BAAiBA,GAAPA,MAGtB,8BAAMnD,GAAS,eACf,8BAAME,GAAO,gBE1CjBoD,IAASC,OAAO,cAAC7D,EAAD,IAAQ8D,SAASC,eAAe,W","file":"static/js/main.4baac610.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1)\n  \n  const {\n    books,\n    hasMore,\n    loading,\n    error\n  } = useBookSearch(query, pageNumber);\n\n  const observer = useRef()\n  const lastBookElementRef = useCallback(node => {\n    if(loading) return\n    console.log(observer.current)\n    if(observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if(entries[0].isIntersecting && hasMore){\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\n      }\n    })\n    if(node) observer.current.observe(node)\n    console.log(node)\n  }) \n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n    setPageNumber(1)\n  }\n\n\n  return (\n    <>\n     <input type=\"text\" value={query} onChange={handleSearch}></input>\n    {books.map((book, index)=>{\n      if(books.length === index+1){\n        return  <div ref={lastBookElementRef} key={book}>{book}</div>\n      } else {\n        return  <div key={book}>{book}</div>\n      }\n    })}\n    <div>{loading&&'loading...'}</div>\n    <div>{error&&'error...'}</div>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useBookSearch(query, pageNumber) {\r\n const [loading, setLoading] = useState(true)\r\n const [error, setError] = useState(false)\r\n const [books, setBooks] = useState([])\r\n const [hasMore, setHasMore] = useState(false)\r\n\r\n useEffect(() => {\r\n  setBooks([])\r\n }, [query])\r\n\r\n useEffect(() =>{\r\n  setLoading(true)\r\n  setError(false)\r\n  let cancel\r\n  axios({\r\n  method: 'GET',\r\n  url:'https://openlibrary.org/search.json',params: {q:query, page: pageNumber},\r\n  cancelToken: new axios.CancelToken(c => cancel = c)\r\n }).then(res =>{\r\n  setBooks(prevBooks => {\r\n   return[...new Set([...prevBooks,...res.data.docs.map(b =>b.title)])]\r\n  })\r\n  setHasMore(res.data.docs.length > 0)\r\n  setLoading(false)\r\n   console.log(res.data)\r\n  }).catch(e =>{\r\n   if(axios.isCancel(e))return\r\n   setError(true)\r\n  })\r\n  return () =>cancel()\r\n }, [query,pageNumber])\r\n\r\n return { loading, error, books, hasMore}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}